{"version":3,"sources":["index.js"],"names":["reservas","tipoHabitacion","pax","noches","TotalReservas","reserva","clients","totalClients","iva","days","room","priceRoom","totalRoom","subtotal","total","price","priceClient","myBookings","map","totalesCliente","console","log","separation","printSubtotal","printTotal","TourOperador","discount","tour"],"mappings":"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","file":"LM-BJS-Module-11.e31bb0bc.js","sourceRoot":"..","sourcesContent":["// DECLARACION DE VARIABLES\n\nconst reservas = [{\n        tipoHabitacion: \"standard\",\n        pax: 1,\n        noches: 3\n    },\n    {\n        tipoHabitacion: \"standard\",\n        pax: 1,\n        noches: 4\n    },\n    {\n        tipoHabitacion: \"suite\",\n        pax: 2,\n        noches: 1\n    }\n];\n\n// CASO 1: RESERVAS DE HOTEL\n\nclass TotalReservas {\n    constructor(reserva) { // Se declara el constructor y sus variables\n        this.clients = this.totalClients();\n        this.iva = 0.21;\n        this.days = reserva.noches;\n        this.room = reserva.tipoHabitacion;\n        this.priceRoom = this.totalRoom();\n        this.totalClients = 0;\n        this.subtotal = this.subtotal();\n        this.total = 0;\n    }\n    totalRoom() { // Calcula el precio segun el tipo de habitacion\n        this.room === \"standard\" ? this.price = 100 : this.price = 150;\n    }\n\n    totalClients() { // Añade 40 euros si hay más de un huesped\n        this.clients > 1 ? this.priceClient = (this.clients - 1) * 40 : this.priceClient = 0;\n    }\n    subtotal() {\n        return (this.price * this.days) + this.priceClient;\n    }\n    get total() {\n        return this.subtotal + (this.iva * this.subtotal);\n    }\n    get separation() {\n        return \"*********************\";\n    }\n    get printSubtotal() {\n        return \"El total sin IVA es: \" + this.subtotal + \" €\";\n    }\n\n    get printTotal() {\n        return \"El total, IVA incluido, es: \" + this.total + \" €\";\n    }\n\n}\n\nconst myBookings = reservas => reservas.map(reserva => { // Se utiliza map para iterar en el objeto\n    const totalesCliente = new TotalReservas(reserva); // Se instancia la clase TotalesDepartamento, diciendole qué descuento tiene para que lo aplique al constructor\n    console.log(totalesCliente.separation);\n    console.log(totalesCliente.printSubtotal);\n    console.log(totalesCliente.printTotal);\n});\nconsole.log(\"********************* CASO 1: RESERVA DE HOTELES *********************\");\nmyBookings(reservas); // Llamamos a la función principal\n\n// CASO 2: RESERVAS DE TOUR OPERADOR\n\nclass TourOperador extends TotalReservas { // se declara la clase hija\n    constructor(reserva) {\n        super(reserva); // se aplican los valores del constructor padre al hijo\n        this.discount = 0.15;\n    }\n\n    totalRoom() { // modificamos el precio de las habitaciones\n        this.price = 100;\n    }\n\n    get total() {\n        return this.subtotal + (this.iva * this.subtotal) * this.discount; // Se añade el descuento\n    }\n\n}\n\nconst tour = reservas => reservas.map(reserva => { // Se utiliza map para iterar en el objeto\n    const totalesCliente = new TourOperador(reserva); // Se instancia la clase TotalesDepartamento, diciendole qué descuento tiene para que lo aplique al constructor\n    console.log(totalesCliente.separation);\n    console.log(totalesCliente.printSubtotal);\n    console.log(totalesCliente.printTotal);\n});\n\nconsole.log(\"*********************\");\nconsole.log(\"********************* CASO 2: TOUR OPERADOR *********************\");\ntour(reservas); // Llamamos a la función principal"]}